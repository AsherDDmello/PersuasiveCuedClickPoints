/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LoginFrame.java
 *
 * Created on Mar 11, 2013, 11:06:52 AM
 */

package cuepoints_picture;

import cuelayer.Authenticate;
import cuelayer.ConnectionModel;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.lang.String;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author RAMU
 */
public class LoginFrame extends javax.swing.JFrame implements MouseListener {

    Authenticate au=null;
    String cuepoint="";
    int global=0;
    int choiceno=0;
    int attempts=0;
    int max;
    String validuser="";
    int option=-1;
    /** Creates new form LoginFrame */
    public LoginFrame() {
        
        initComponents();
        jLabel6.setVisible(false);
                        jLabel10.setVisible(true); 
    }   /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cuepoints_picture.CuePoints_PictureApp.class).getContext().getResourceMap(LoginFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setBounds(new java.awt.Rectangle(20, 20, 0, 0));
        setMinimumSize(new java.awt.Dimension(1325, 690));
        setName("Form"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(null);

        jButton3.setBackground(resourceMap.getColor("jButton3.background")); // NOI18N
        jButton3.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton3.setForeground(resourceMap.getColor("jButton1.foreground")); // NOI18N
        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(1180, 600, 110, 50);

        jTextField1.setBackground(resourceMap.getColor("jTextField1.background")); // NOI18N
        jTextField1.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jTextField1.setForeground(resourceMap.getColor("jTextField1.foreground")); // NOI18N
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setBorder(null);
        jTextField1.setName("jTextField1"); // NOI18N
        getContentPane().add(jTextField1);
        jTextField1.setBounds(120, 120, 260, 40);

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(640, 480));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(jPanel3);
        jPanel3.setBounds(620, 80, 640, 480);

        jRadioButton1.setBackground(resourceMap.getColor("jLabel1.background")); // NOI18N
        jRadioButton1.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jRadioButton1.setForeground(resourceMap.getColor("jRadioButton1.foreground")); // NOI18N
        jRadioButton1.setText(resourceMap.getString("jRadioButton1.text")); // NOI18N
        jRadioButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jRadioButton1.setName("jRadioButton1"); // NOI18N
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButton1);
        jRadioButton1.setBounds(50, 320, 210, 20);

        jRadioButton2.setBackground(resourceMap.getColor("jLabel1.background")); // NOI18N
        jRadioButton2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jRadioButton2.setForeground(resourceMap.getColor("jRadioButton2.foreground")); // NOI18N
        jRadioButton2.setText(resourceMap.getString("jRadioButton2.text")); // NOI18N
        jRadioButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jRadioButton2.setName("jRadioButton2"); // NOI18N
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButton2);
        jRadioButton2.setBounds(50, 420, 290, 20);

        jButton1.setBackground(resourceMap.getColor("jButton1.background")); // NOI18N
        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setForeground(resourceMap.getColor("jButton1.foreground")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(180, 600, 120, 50);

        jButton4.setFont(resourceMap.getFont("jButton4.font")); // NOI18N
        jButton4.setIcon(resourceMap.getIcon("jButton4.icon")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(120, 180, 110, 40);

        jButton5.setFont(resourceMap.getFont("jButton5.font")); // NOI18N
        jButton5.setIcon(resourceMap.getIcon("jButton5.icon")); // NOI18N
        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setEnabled(false);
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(240, 180, 100, 40);

        jLabel6.setIcon(resourceMap.getIcon("jLabel6.icon")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(460, 170, 128, 120);

        jLabel10.setIcon(resourceMap.getIcon("jLabel10.icon")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        getContentPane().add(jLabel10);
        jLabel10.setBounds(460, 180, 120, 120);

        jLabel1.setBackground(resourceMap.getColor("jLabel1.background")); // NOI18N
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 120, 110, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        MainMenu mn=new MainMenu();
        this.setVisible(false);
        mn.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try
        {
            Connection con;
            con=ConnectionModel.getConnection();
             Statement stmt=con.createStatement();
             ResultSet rs=stmt.executeQuery("select question,answer,cuepoints from cuepoints_registration where loginname like '" + validuser + "'");
             if(rs.next())
             {
                 String quest=rs.getString(1);
                 String myansw=rs.getString(2);
                 String mypoints=rs.getString(3);
                 JOptionPane.showMessageDialog(this,"Question : " + quest);
                 String answer=JOptionPane.showInputDialog(this,"Enter Answer For Your Question");
                 if(answer.equals(myansw))
                 {
                     JOptionPane.showMessageDialog(this,"CuePoints : " + mypoints);
                 }
                 else
                     JOptionPane.showMessageDialog(this,"Invalid Answer System Authentication Failed ");
             }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error ");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
     au=new Authenticate();
                if(au.isValid(jTextField1.getText())==false)
                   JOptionPane.showMessageDialog(this,"Invalid User ");
                else
                {
                     JOptionPane.showMessageDialog(this,"USER VALIDATION CONFIRMED PROCEED WITH PASSWORD");
                     validuser=jTextField1.getText();
                     jButton5.setEnabled(true);
                  }
    }//GEN-LAST:event_jButton4ActionPerformed

    
    private void loadDefaults()
    {
        File f=new File("E:\\dump");
                    File []all=f.listFiles();
                    max=all.length;
                    int idx=0;
                    choiceno=au.getLevel();
                    String filename=all[global].getAbsolutePath();
        ImageLabelNoGrid imglbl=new ImageLabelNoGrid(0,0,jPanel3.getBounds().height,jPanel3.getBounds().width,choiceno,filename);
        jPanel3.removeAll();
        imglbl.revalidate();
        imglbl.repaint();
        imglbl.addMouseListener(this);
        jPanel3.add(imglbl); 
        
        //imgLbl.addMouseListener(this);
       // jPanel2.add(getMyLines(0,0,jPanel2.getBounds().height,jPanel2.getBounds().width,choiceno,filename));
        jPanel3.revalidate();
       jPanel3.repaint();
     //   revalidate();
        repaint();
         
                        
    }
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        option=1;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        option=2;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
       
        if(option==-1)
        {
            JOptionPane.showMessageDialog(this,"Please Select An Option From Below");
            return;
        }
        if(option==1)
        {
             jLabel6.setVisible(true);
             jLabel10.setVisible(false);
            loadDefaults();
               
        }        
else
             loadKnowledgeBase();    
    }//GEN-LAST:event_jButton5ActionPerformed
    private void loadKnowledgeBase()
    {
        try
        {
            
            File f=new File("E:\\dump_global");
          if(f.exists()==true)
          {
              if(f.isDirectory()==true)
              {
                File []all=f.listFiles();
                for(int i=0;i<all.length;i++)
                    all[i].delete();
              }
          }
          //read image by image and keep inside a temporary directory where images can be saved.
          Blob b;
          long length;
          InputStream is;
          byte []data;
          FileOutputStream fos;
          String file="Admin";
         
         Connection con=    ConnectionModel.getConnection();
         Statement stmt=con.createStatement();
         ResultSet rs=stmt.executeQuery("select * from picture");
         ResultSetMetaData rsmd=rs.getMetaData();
         int cnt;
          rs.next();
          for(cnt=1;cnt<=rsmd.getColumnCount();cnt++)
          {
             b=rs.getBlob(cnt);
              length=b.length();
              is=b.getBinaryStream();
              data=new byte[(int)length];
              is.read(data);
              fos=new FileOutputStream("E:\\dump_global\\" + file + "" + cnt + ".jpg");
              fos.write(data);
              fos.close();
         }
         rs.close();
         loadGlobalDefaults(); 
         
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error ");
    }
    }
    private void loadGlobalDefaults()
    {
        File f=new File("E:\\dump");
                    File []all=f.listFiles();
                    max=all.length;
                    int idx=0;
                    choiceno=au.getLevel();
                    String filename=all[0].getAbsolutePath();
        ImageLabelNoGrid imglbl=new ImageLabelNoGrid(0,0,jPanel3.getBounds().height,jPanel3.getBounds().width,choiceno,filename);
        jPanel3.removeAll();
        imglbl.revalidate();
        imglbl.repaint();
        imglbl.addMouseListener(this);
        jPanel3.add(imglbl); 
        
        //imgLbl.addMouseListener(this);
       // jPanel2.add(getMyLines(0,0,jPanel2.getBounds().height,jPanel2.getBounds().width,choiceno,filename));
        jPanel3.revalidate();
       jPanel3.repaint();
        //revalidate();
        repaint();
        
    }
    public void mouseClicked(MouseEvent e)
    {
       // JOptionPane.showMessageDialog(this, "hi");
  
        //cuepoint.setText(e.getX() + "," + e.getY());
        cuepoint=e.getX() +"," + e.getY();
     }
    public void mouseEntered(MouseEvent e)
    {
        //JOptionPane.showMessageDialog(this, "hi");
    }
    public void mouseExited(MouseEvent e)
    {
        //JOptionPane.showMessageDialog(this, "hi");
    }
    private void showGlobalImage()
    {
        //pick up the image randomly
        File f=new File("E:\\dump_global");
        File []all=f.listFiles();
        Random r=new Random();
        int rnd =r.nextInt(all.length);
        String filename=all[rnd].getAbsolutePath();
 ImageLabelNoGrid imglbl=new ImageLabelNoGrid(0,0,jPanel3.getBounds().height,jPanel3.getBounds().width,choiceno,filename);
              jPanel3.removeAll();
        imglbl.revalidate();
        imglbl.repaint();
        imglbl.addMouseListener(this);
        jPanel3.add(imglbl); 
        
        //imgLbl.addMouseListener(this);
       // jPanel2.add(getMyLines(0,0,jPanel2.getBounds().height,jPanel2.getBounds().width,choiceno,filename));
        jPanel3.revalidate();
        jPanel3.repaint();
        //revalidate();
        repaint();
               
    }
    private void showNextImage(int cnt)
    {
             File f=new File("E:\\dump");
                    File []all=f.listFiles();
                    int idx=0;
                     choiceno=au.getLevel();
                    String filename=all[global].getAbsolutePath();
            ImageLabelNoGrid imglbl=new ImageLabelNoGrid(0,0,jPanel3.getBounds().height,jPanel3.getBounds().width,choiceno,filename);
              jPanel3.removeAll();
        imglbl.revalidate();
        imglbl.repaint();
        imglbl.addMouseListener(this);
        jPanel3.add(imglbl); 
        
        //imgLbl.addMouseListener(this);
       // jPanel2.add(getMyLines(0,0,jPanel2.getBounds().height,jPanel2.getBounds().width,choiceno,filename));
        jPanel3.revalidate();
        jPanel3.repaint();
        //revalidate();
        repaint();
        
    }
    public void mousePressed(MouseEvent e)
    {
        if(option==1)
        {
        Point p=e.getLocationOnScreen();
        String block=getCodeforClick(p);
        String []parts=au.getMyBlocks().get(0).toString().split("#");
         
        
        if(attempts>=3)
        {
            jLabel6.setVisible(false);
                        jLabel10.setVisible(true); 
            JOptionPane.showMessageDialog(this,"WARNING: INTRUDER DETECTED");
            JOptionPane.showMessageDialog(this,"PASSWORD SYSTEM SHUTDOWN ACTIVATED");
            this.dispose();
            System.exit(0);
        }
        if(parts[global].equals(block))
        {
        //    String []points=au.getMyPoints().get(0).toString().split("#");
         // if(cuepoint.equals(points[global]))
         // {
            attempts=0;
            if(global==max-1)
            {
                JOptionPane.showMessageDialog(this,"Authentication Confirmed!");
                useraccount m=new useraccount();
        m.setVisible(true);
        this.setVisible(false);
                return;
            }
             showNextImage(global++);   
             
       //    else
         //     JOptionPane.showMessageDialog(this,"Invalid CuePoint Clicked");
        }
            else
        {
            attempts++;
           JOptionPane.showMessageDialog(this,"Invalid CuePoint Selected ");
        }
        }
        else
        {
         Point p=e.getLocationOnScreen();
        String block=getCodeforClick(p);
        String []parts=au.getMyBlocks().get(0).toString().split("#");
         
        
        if(attempts>=3)
        {
            jLabel6.setVisible(false);
                        jLabel10.setVisible(true); 
            JOptionPane.showMessageDialog(this,"WARNING: INTRUDER DETECTED");
            JOptionPane.showMessageDialog(this,"PASSWORD SYSTEM SHUTDOWN ACTIVATED");
            this.dispose();
            System.exit(0);
        }
        if(parts[global].equals(block))
        {
        //    String []points=au.getMyPoints().get(0).toString().split("#");
         // if(cuepoint.equals(points[global]))
         // {
            attempts=0;
            if(global==max-1)
            {
                JOptionPane.showMessageDialog(this,"Authentication Confirmed!");
                useraccount m=new useraccount();
        m.setVisible(true);
        this.setVisible(false);
                return;
            }
             showNextImage(global++);   
             
       //    else
         //     JOptionPane.showMessageDialog(this,"Invalid CuePoint Clicked");
        }
            else
        {
            attempts++;
          showGlobalImage();
        }   
        }
    }
    
    private String getCodeforClick(Point p)
    {
       // JOptionPane.showMessageDialog(this, "Panel x:"+pnl.getBounds().x+" y:"+pnl.getBounds().y);
        int dx=jPanel3.getBounds().x-this.getBounds().x+6;
        int dy=90;
        System.out.println(dx+" "+dy);
       
        int x=p.x-dx;
        int y=p.y-dy;
        //JOptionPane.showMessageDialog(this, "point x:"+x+" y:"+p.y+"\npwid:"+pWid+" phei+"+pHei);
        
        String code="";
        for(int i=1;i<=choiceno+1;i++)
        {
            if(x<((jPanel3.getBounds().getWidth()/choiceno)*i))
            {
            code+=choiceno+""+i;
            break;
            }
         }
        for(int i=1;i<=choiceno+1;i++)
        {
         if(y<((jPanel3.getBounds().getHeight()/choiceno)*i))
            {
            code+=choiceno+""+i;
            break;
            }
        }
       // JOptionPane.showMessageDialog(this, "grid no:"+code);
        return code;
    }                           
    public void mouseReleased(MouseEvent e)
    {
        //JOptionPane.showMessageDialog(this, "hi");
    }
 
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
